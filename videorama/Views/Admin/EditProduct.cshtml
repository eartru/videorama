@model Tuple<Videorama.Models.Product, List<Videorama.Models.Person>>

@{
    ViewBag.Title = "Modifier un produit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int type = Model.Item1.TypeP.IdType;
    bool boolType1 = false;
    bool boolType2 = false;
    bool boolType3 = false;
}

<h2>Modifier un produit</h2>

@Html.Raw(type)

@if (type == 1)
{
    boolType1 = true;
}
@if (type == 2)
{
    boolType2 = true;
}
@if (type == 3)
{
    boolType3 = true;
}

@Html.Raw(boolType1)
@Html.Raw(boolType2)
@Html.Raw(boolType3)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label(Model.Item1.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item1.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.Synopsis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item1.Synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item1.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item1.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Picture" id="Picture" class="form-control" /><br><br>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.ReleaseDate, new { htmlAttributes = new { @class = "form-control", Value = Model.Item1.ReleaseDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.Item1.ReleaseDate, "", new { @class = "text-danger", @type = "date" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Item1.TypeP, new List<SelectListItem>
                {
                    new SelectListItem() { Selected= boolType1, Text = "Film", Value="1"},
                    new SelectListItem() { Selected= boolType2, Text = "Série", Value="2"},
                    new SelectListItem() { Selected= boolType3, Text = "Dessins animés", Value = "3" }
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifier" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la gestion des stocks", "Stock")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
